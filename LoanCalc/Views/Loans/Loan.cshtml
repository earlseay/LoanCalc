@model LoanCalc.Models.Loan

<style>
	.card{
		border: 1px solid gray;
		padding: 20px 20px 20px 20px;
		margin: 10px 0px 10px 0px;
	}

	.card-body {
		/* padding: 0px 5px 0px 5px; */
	}
		.card-body .row {
			padding: 5px 0px 5px 0px;
		}
	.bold{
		font-weight: bold;
	}
</style>

<div class="container card">
	<div class="row">
		<div class="col col-md-12">
			<h3>@Model.Name</h3>
		</div>
		<hr />
	</div>
	<div class="row card-body">
		<div class="container">
			<div class="row">
				<div class="col-md-12">
					Current Amount Remaining: <span class="bold">@string.Format("{0:c}", Model.Current_AmountRemaining)</span>
				</div>
			</div>
			<div class="row">
				<div class="col col-md-12">
					Regular Monthly Payment: @string.Format("{0:c}", Model.MonthlyPayment)
				</div>
				<div class="col col-md-12">
					Extra Monthly Payment: @string.Format("{0:c}", Model.ExtraPaymentAmount)
				</div>
				<div class="col col-md-12">
					Total Monthly Payment: @string.Format("{0:c}", Model.MonthlyPayment + Model.ExtraPaymentAmount)
				</div>
			</div>
			<div class="row">
				<div class="col col-md-12">
					New Projected Payoff: <span class="bold">@Model.New_ProjectedPayoffDate.ToShortDateString()</span>
				</div>
			</div>
			<div class="row">
				<div class="col col-md-12">
					Months to Payoff: @Model.MonthsToPayOff
				</div>
			@{
			var yearsToPayoff = Model.MonthsToPayOff > 0 ? Model.MonthsToPayOff / 12 > 1 ? Model.MonthsToPayOff / 12 : 0 : 0;
			if (yearsToPayoff > 0)
			{
						<div class="col-md-12">
							Years to Payoff: @yearsToPayoff
						</div>
			}
			}

				<div class="col-md-12">
					Payments made to date: @Model.MonthsPaid
				</div>
			</div>
			<div class="row">
				<div class="col col-md-12">
					<table class="table table-condensed table-bordered table-striped">
						<thead>
							<tr>
								<td>Date</td>
								<td>Computed Loan Amount with Interest</td>
								<td>Payment Amount</td>
								<td>Principal</td>
								<td>Interest</td>
							</tr>
						</thead>
						<tbody>
						@foreach (var payment in Model.Payments)
						{
							@Html.Partial("Payment", payment)
						}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
